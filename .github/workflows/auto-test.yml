name: API Auto Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: api/go.mod
          cache-dependency-path: api/go.sum

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          working-directory: api

      - name: Load cached Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: docker-${{ runner.os }}-mysql-8
          restore-keys: |
            docker-${{ runner.os }}-mysql-

      - name: Load cached MySQL image (if available)
        run: |
          if [ -f /tmp/docker-cache/mysql.tar ]; then
            docker load -i /tmp/docker-cache/mysql.tar || true
          fi

      - name: Pull MySQL image if not cached
        run: |
          if ! docker image inspect mysql:8.0 > /dev/null 2>&1; then
            docker pull mysql:8.0
            mkdir -p /tmp/docker-cache
            docker save mysql:8.0 -o /tmp/docker-cache/mysql.tar
          fi

      - name: Start database
        run: docker compose up --build -d mysql

      - name: Run Go tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: appuser
          DB_PASSWORD: password
          DB_NAME: app
        run: |
          cd api
          go test -race -cover ./...

      - name: Stop database
        if: always()
        run: make down
